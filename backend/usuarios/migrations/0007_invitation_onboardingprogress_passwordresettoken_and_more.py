# Generated by Django 5.0.6 on 2025-10-19 00:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organizacion', '0006_tenant_schema_support'),  # Updated to new unified migration
        ('usuarios', '0006_magiclinktoken'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, help_text='Email al que se enviará la invitación', max_length=254, verbose_name='Email del invitado')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('sede_admin', 'Administrador de Sede'), ('colaborador', 'Colaborador'), ('miembro', 'Miembro')], help_text='Rol que tendrá el usuario invitado', max_length=20, verbose_name='Rol')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Nombre')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Apellido')),
                ('token', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Token de invitación')),
                ('is_accepted', models.BooleanField(default=False, help_text='Indica si la invitación ha sido aceptada', verbose_name='Aceptada')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada')),
                ('expires_at', models.DateTimeField(editable=False, verbose_name='Expira')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Aceptada el')),
            ],
            options={
                'verbose_name': 'Invitación',
                'verbose_name_plural': 'Invitaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OnboardingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_created_service', models.BooleanField(default=False, verbose_name='Ha creado al menos un servicio')),
                ('has_added_collaborator', models.BooleanField(default=False, verbose_name='Ha agregado al menos un colaborador')),
                ('has_viewed_public_link', models.BooleanField(default=False, verbose_name='Ha visto su enlace público')),
                ('has_completed_profile', models.BooleanField(default=False, verbose_name='Ha completado su perfil')),
                ('is_completed', models.BooleanField(default=False, help_text='Marcado como completo cuando el usuario termina todos los pasos esenciales', verbose_name='Onboarding completado')),
                ('is_dismissed', models.BooleanField(default=False, help_text='El usuario decidió saltar el onboarding', verbose_name='Usuario cerró el onboarding')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completado el')),
            ],
            options={
                'verbose_name': 'Progreso de Onboarding',
                'verbose_name_plural': 'Progresos de Onboarding',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(editable=False)),
                ('used', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Password Reset Token',
                'verbose_name_plural': 'Password Reset Tokens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='perfilusuario',
            options={'ordering': ['user__username', 'organizacion__nombre'], 'verbose_name': 'Perfil de Usuario', 'verbose_name_plural': 'Perfiles de Usuario'},
        ),
        migrations.AddField(
            model_name='perfilusuario',
            name='sedes',
            field=models.ManyToManyField(blank=True, help_text='Sedes a las que tiene acceso el usuario', related_name='usuarios_multisede', to='organizacion.sede'),
        ),
        migrations.AlterField(
            model_name='perfilusuario',
            name='sede',
            field=models.ForeignKey(blank=True, help_text='Sede principal del usuario', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='organizacion.sede'),
        ),
        migrations.AlterField(
            model_name='perfilusuario',
            name='sedes_administradas',
            field=models.ManyToManyField(blank=True, help_text='Sedes que puede administrar', related_name='administradores', to='organizacion.sede'),
        ),
        migrations.AlterField(
            model_name='perfilusuario',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='perfilusuario',
            unique_together={('user', 'organizacion')},
        ),
        migrations.AddIndex(
            model_name='perfilusuario',
            index=models.Index(fields=['user', 'organizacion'], name='usuarios_pe_user_id_a1cda9_idx'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='organizacion.organizacion', verbose_name='Organización'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='sede',
            field=models.ForeignKey(blank=True, help_text='Sede a la que se invita al usuario (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invitations', to='organizacion.sede', verbose_name='Sede'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL, verbose_name='Enviado por'),
        ),
        migrations.AddField(
            model_name='onboardingprogress',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_progress', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='passwordresettoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['email', 'is_accepted'], name='usuarios_in_email_62b760_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['token', 'expires_at'], name='usuarios_in_token_b080d5_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['organization', 'is_accepted'], name='usuarios_in_organiz_08bb5c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invitation',
            unique_together={('email', 'organization', 'is_accepted')},
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['token', 'expires_at', 'used'], name='usuarios_pa_token_7ecb0b_idx'),
        ),
    ]
